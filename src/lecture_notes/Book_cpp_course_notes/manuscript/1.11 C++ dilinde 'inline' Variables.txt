> 'inline' Variables : C++17 ile dile eklenmiş bir özelliktir. Başlık dosyasında tanımlanan değişkenlerin 'ODR' kurallarını
ihlal etmemesini sağlar. Aksi halde o başlık dosyasını '#include' eden bütün kaynak dosyalarda bahsi geçen değişkenimizin
tanımı olacağından, 'ODR' ihlal edilmiş olacaktır. 
	* Örnek 1,
		//neco.hpp
			#include <vector>

			class A{

			};

			inline std::vector<A> aVec; // 'inline' olarak betimlendiği için artık 'ODR' ihlal edilmemiş oluyor.

	>> Sınıfların 'static data members' larını sınıf içerisinde tanımlayabilmemiz için 'const' ve 'integral type' olma
	zorunluluğu vardır. Fakat bunları da 'inline' yaparsak bu zorunluluk ortadan kalkar.
		* Örnek 1,
			//..

			class A{
				// Normal şartlarda SENTAKS HATASI. Çünkü burada bir 'bildirim' yapılmakta.
				static double mx{20};

				// İlgili 'static' değişkenimiz, 'const' ve 'integral-type' olduğu müddetçe, bu deyim LEGALDİR.
				const static int my{30};

				// C++17'den itibaren bu deyim de artık LEGALDİR. Artık 'const' ve 'integral-type' olma zorunluluğu yoktur.
				inline static double {200.022};
			};

			// Dipnot : Artık 'static' değişkenlerimizi 'const' yapmak yerine 'constexpr' şeklinde betimlemek daha yaygın
			// hale gelmektedir.
